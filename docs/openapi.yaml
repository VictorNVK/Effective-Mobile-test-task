openapi: 3.0.3
info:
  title: Bank Cards Admin API
  version: 1.0.0
  description: >
    Admin endpoints for managing bank cards. Security is disabled in the current
    environment; once authentication is in place, update the `security` section accordingly.
servers:
  - url: http://localhost:8901/api/v3
    description: Local Spring Boot backend
  - url: http://127.0.0.1:8901/api/v3
    description: Localhost alias (for Swagger/IDEA)
  - url: http://localhost:63342
    description: IntelliJ internal server (read-only, do not use)
x-localhost-example: http://localhost:8901/api/v3
tags:
  - name: Admin
    description: Administrative operations over cards

paths:
  /admin/card/create:
    post:
      tags:
        - Admin
      operationId: createCard
      summary: Создать карту для клиента
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCreateRequestDto'
      responses:
        '201':
          description: Карта успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardCreateResponseDto'
        '204':
          description: Клиент с указанным `ownerId` не найден
        '409':
          description: Карта с таким PAN уже существует (коллизия генератора)
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервиса
          content:
            text/plain:
              schema:
                type: string

  /admin/card/{cardId}/block:
    patch:
      tags:
        - Admin
      operationId: blockCard
      summary: Заблокировать карту
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: Идентификатор карты
          example: 1
      responses:
        '200':
          description: Статус карты обновлён на BLOCKED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardResponseDto'
        '404':
          description: Карта не найдена
        '500':
          description: Внутренняя ошибка сервиса
          content:
            text/plain:
              schema:
                type: string

  /admin/card/{cardId}/activate:
    patch:
      tags:
        - Admin
      operationId: activateCard
      summary: Активировать карту
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: Идентификатор карты
          example: 1
      responses:
        '200':
          description: Статус карты обновлён на ACTIVE
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardResponseDto'
        '404':
          description: Карта не найдена
        '500':
          description: Внутренняя ошибка сервиса
          content:
            text/plain:
              schema:
                type: string

components:
  schemas:
    CardCreateRequestDto:
      type: object
      required:
        - ownerId
      properties:
        ownerId:
          type: string
          format: uuid
          description: Идентификатор клиента, которому будет принадлежать карта
          example: "550e8400-e29b-41d4-a716-446655440000"

    CardCreateResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор созданной карты
          example: 1
        ownerId:
          type: string
          format: uuid
          description: Идентификатор владельца карты
          example: "550e8400-e29b-41d4-a716-446655440000"
        maskedPan:
          type: string
          description: Маскированный номер карты
          example: "**** **** **** 1234"
        expiryMonth:
          type: integer
          description: Месяц окончания срока действия
          example: 12
        expiryYear:
          type: integer
          description: Год окончания срока действия
          example: 2027
        plainPan:
          type: string
          description: Сырый PAN, возвращается только при создании карты
          example: "5483450012345678"

    CardResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор карты
          example: 1
        ownerId:
          type: string
          format: uuid
          description: Идентификатор владельца карты
          example: "550e8400-e29b-41d4-a716-446655440000"
        status:
          type: string
          enum: [ACTIVE, BLOCKED, EXPIRED]
          description: Текущий статус карты
          example: BLOCKED
        maskedPan:
          type: string
          description: Маскированный номер карты
          example: "**** **** **** 1234"
        expiryMonth:
          type: integer
          description: Месяц окончания срока действия
          example: 12
        expiryYear:
          type: integer
          description: Год окончания срока действия
          example: 2027
